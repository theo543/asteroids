file(GLOB_RECURSE RESOURCE_FILES CONFIGURE_DEPENDS "${CMAKE_CURRENT_SOURCE_DIR}/resources/*")

add_custom_command(
        OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/embedded_resources.cpp ${CMAKE_CURRENT_SOURCE_DIR}/embedded_fwd.h
        COMMAND ${CMAKE_COMMAND}
        -D"EMBED_SUBPROCESS=1"
        -D"OUTPUT_FILE=${CMAKE_CURRENT_BINARY_DIR}/embedded_resources.cpp"
        -D"HEADER_FILE=${CMAKE_CURRENT_SOURCE_DIR}/embedded_fwd.h"
        -D"RESOURCE_FOLDER=${CMAKE_CURRENT_SOURCE_DIR}/resources"
        -P"${CMAKE_CURRENT_SOURCE_DIR}/CMakeLists.txt"
        DEPENDS "${CMAKE_CURRENT_SOURCE_DIR}/CMakeLists.txt" "${RESOURCE_FILES}"
)

if(GITHUB_ACTIONS)
    set(OUTPUT_FILE ${CMAKE_CURRENT_BINARY_DIR}/embedded_resources.cpp)
    set(HEADER_FILE ${CMAKE_CURRENT_SOURCE_DIR}/embedded_fwd.h)
    set(RESOURCE_FOLDER ${CMAKE_CURRENT_SOURCE_DIR}/resources)
    generate_resources()
endif()

target_sources(${PROJECT_NAME} PRIVATE ${CMAKE_CURRENT_BINARY_DIR}/embedded_resources.cpp ${CMAKE_CURRENT_SOURCE_DIR}/embedded_fwd.h)



.....



function(generate_resources)
    IF(NOT DEFINED OUTPUT_FILE)
        message(FATAL_ERROR "OUTPUT_FILE variable must be defined")
    ENDIF()

    IF(NOT DEFINED HEADER_FILE)
        message(FATAL_ERROR "HEADER_FILE variable must be defined")
    ENDIF()

    IF(NOT DEFINED RESOURCE_FOLDER)
        message(FATAL_ERROR "RESOURCE_FOLDER variable must be defined")
    ENDIF()

    list(APPEND RESOURCES
        "${RESOURCE_FOLDER}/public-pixel-font/PublicPixel-z84yD.ttf PublicPixelTTF"
        "${RESOURCE_FOLDER}/piano-loop/683841__josefpres__piano-loops-094-octave-long-loop-120-bpm.ogg TestSoundOGG"
    )

    file(WRITE ${OUTPUT_FILE} "#include <span>\n")
    file(WRITE ${HEADER_FILE} "#ifndef RESOURCES_H\n#define RESOURCES_H\n#include <span>\n")
    file(APPEND ${HEADER_FILE} "// DO NOT EDIT - AUTOGENERATED FORWARD DECLARATION FOR EMBEDDED RESOURCES\n")

    foreach(RESOURCE ${RESOURCES})
        string(REGEX MATCH "^([^ ]+)" filename ${RESOURCE})
        string(REGEX MATCH "([^ ]+)$" varname ${RESOURCE})
        message(STATUS "Generating variable ${varname} from file ${filename}")
        set(file "${filename}")
        file(READ ${file} filedata HEX)
        string(REGEX REPLACE "([0-9a-f][0-9a-f])" "0x\\1," filedata_formatted ${filedata})
        file(APPEND ${OUTPUT_FILE} "const static unsigned char ${varname}_ARRAY[] = {${filedata_formatted}};\n")
        # Declared extern "C" to make clang-tidy stop saying it's uninitialized
        file(APPEND ${OUTPUT_FILE} "extern \"C\" const std::span<const unsigned char> ${varname}(${varname}_ARRAY, ${varname}_ARRAY + sizeof(${varname}_ARRAY));\n")
        file(APPEND ${HEADER_FILE} "extern \"C\" const std::span<const unsigned char> ${varname};\n")
    endforeach()

    file(APPEND ${HEADER_FILE} "#endif\n")
endfunction()

IF(EMBED_SUBPROCESS)
    generate_resources()
    return()
endif()